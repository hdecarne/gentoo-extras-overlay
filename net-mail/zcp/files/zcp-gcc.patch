diff -rupN zarafa-7.1.8/ECtools/zarafa-search/ECIndexImporterAttachments.cpp zarafa-7.1.8.gcc/ECtools/zarafa-search/ECIndexImporterAttachments.cpp
--- zarafa-7.1.8/ECtools/zarafa-search/ECIndexImporterAttachments.cpp	2014-01-30 13:41:34.000000000 +0100
+++ zarafa-7.1.8.gcc/ECtools/zarafa-search/ECIndexImporterAttachments.cpp	2014-02-01 11:11:36.624057697 +0100
@@ -246,7 +246,7 @@ HRESULT ECIndexImporterAttachment::CopyS
 	ULONG ulWriteData;
 	fd_set rset, wset;
 	int res;
-	int fd = max(ulFpWrite, ulFpRead);
+	int fd = std::max(ulFpWrite, ulFpRead);
 	struct timeval timeout;
 
 
@@ -267,7 +267,7 @@ HRESULT ECIndexImporterAttachment::CopyS
 		FD_ZERO(&wset);
 		if (ulTotalWriteData) {
 			FD_SET(ulFpWrite, &wset);
-			fd = max(ulFpWrite, ulFpRead);
+			fd = std::max(ulFpWrite, ulFpRead);
 		} else {
 			fd = ulFpRead;
 		}
@@ -437,10 +437,10 @@ HRESULT ECIndexImporterAttachment::Parse
 	command.assign(m_strCommand + " ");
 
 	if (!strMimeTag.empty() && strMimeTag.compare(_T("application/octet-stream")) != 0) {
-		string tmp = trim(convert_to<string>(strMimeTag), "\r\n ");
+		std::string tmp = trim(convert_to<std::string>(strMimeTag), "\r\n ");
 		size_t pos = tmp.find_first_of('/');
 		if (pos != std::string::npos) {
-			set<string, stricmp_comparison>::iterator i = m_lpThreadData->m_setMimeFilter.find(string(tmp,0,pos));
+			std::set<std::string, stricmp_comparison>::iterator i = m_lpThreadData->m_setMimeFilter.find(std::string(tmp,0,pos));
 			if (i != m_lpThreadData->m_setMimeFilter.end()) {
 				m_lpThreadData->lpLogger->Log(EC_LOGLEVEL_DEBUG, "Skipping filtered attachment mimetype: %s for %ls", tmp.c_str(), strFilename.c_str());
 				hr = MAPI_E_INVALID_OBJECT;
@@ -452,8 +452,8 @@ HRESULT ECIndexImporterAttachment::Parse
 		command.append("'");
 	} else if (!strExtension.empty()) {
 		// this string mostly does not exist
-		string tmp = trim(convert_to<string>(strExtension), "\r\n ");
-		set<string, stricmp_comparison>::iterator i = m_lpThreadData->m_setExtFilter.find(string(tmp,1)); // skip dot in extension find
+		std::string tmp = trim(convert_to<std::string>(strExtension), "\r\n ");
+		std::set<std::string, stricmp_comparison>::iterator i = m_lpThreadData->m_setExtFilter.find(std::string(tmp,1)); // skip dot in extension find
 		if (i != m_lpThreadData->m_setExtFilter.end()) {
 			m_lpThreadData->lpLogger->Log(EC_LOGLEVEL_DEBUG, "Skipping filtered attachment extension: %s for %ls", tmp.c_str(), strFilename.c_str());
 			hr = MAPI_E_INVALID_OBJECT;
@@ -463,14 +463,14 @@ HRESULT ECIndexImporterAttachment::Parse
 		command.append(forcealnum(tmp, "."));
 		command.append("'");
 	} else if (!strFilename.empty()) {
-		std::string tmp = trim(convert_to<string>(strFilename), "\r\n ");
+		std::string tmp = trim(convert_to<std::string>(strFilename), "\r\n ");
 		size_t pos = tmp.find_last_of('.');
 		if (pos == std::string::npos)
 			goto exit;
 
 		
 		// skip dot in find
-		set<string, stricmp_comparison>::iterator i = m_lpThreadData->m_setExtFilter.find(string(tmp, pos+1));
+		std::set<std::string, stricmp_comparison>::iterator i = m_lpThreadData->m_setExtFilter.find(std::string(tmp, pos+1));
 		if (i != m_lpThreadData->m_setExtFilter.end()) {
 			m_lpThreadData->lpLogger->Log(EC_LOGLEVEL_DEBUG, "Skipping filtered attachment extension: %ls", strFilename.c_str());
 			hr = MAPI_E_INVALID_OBJECT;
@@ -478,7 +478,7 @@ HRESULT ECIndexImporterAttachment::Parse
 		}
 
 		command.append("ext '");
-		command.append(forcealnum(string(tmp, pos), "."));
+		command.append(forcealnum(std::string(tmp, pos), "."));
 		command.append("'");
 	} else {
 		m_lpThreadData->lpLogger->Log(EC_LOGLEVEL_DEBUG, "Invalid attachment, no mimetag, extension or filename");
@@ -599,7 +599,7 @@ HRESULT ECIndexImporterAttachment::Parse
 	if (ulAttachSize) {
 		/* Copy attachment data into stream */
 		while (TRUE) {
-			ULONG ulRead = min(m_ulCache, ulAttachSize);
+			ULONG ulRead = std::min(m_ulCache, ulAttachSize);
 			ULONG ulCopy = ulRead;
 			ULONG ulWritten = 0;
 
diff -rupN zarafa-7.1.8/ECtools/zarafa-search/ECIndexImporter.cpp zarafa-7.1.8.gcc/ECtools/zarafa-search/ECIndexImporter.cpp
--- zarafa-7.1.8/ECtools/zarafa-search/ECIndexImporter.cpp	2014-01-30 13:41:34.000000000 +0100
+++ zarafa-7.1.8.gcc/ECtools/zarafa-search/ECIndexImporter.cpp	2014-02-01 12:07:39.248728769 +0100
@@ -437,7 +437,7 @@ HRESULT ECIndexImporter::ProcessThread()
     ECIndexDB *lpIndex = NULL;
     ECIndexDB *lpThisIndex = NULL;
     ArchiveItem *lpArchiveItem = NULL;
-    auto_ptr<ArchiveItem> lpStubTarget;
+    std::auto_ptr<ArchiveItem> lpStubTarget;
     
     m_lpLogger->Log(EC_LOGLEVEL_DEBUG, "Importer thread started");
     
